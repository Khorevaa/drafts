#Использовать ".."
#Использовать asserts

Перем юТест;
Перем Форма;

Процедура Инициализация()
	
КонецПроцедуры

Функция ПолучитьТекстИзФайла(ИмяФайла = "")
    ФайлОбмена = Новый Файл(ИмяФайла);
    Данные = "";
    Если ФайлОбмена.Существует() Тогда
        Текст = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.UTF8);
        Данные = Текст.Прочитать();
        Текст.Закрыть();
    Иначе
        ВызватьИсключение "Файл не найден: " + ИмяФайла;
    КонецЕсли;
    возврат Данные;
КонецФункции


Функция ПолучитьСписокТестов(Тестирование) Экспорт

	юТест = Тестирование;

	СписокТестов = Новый Массив;
	
	// СписокТестов.Добавить("Тест_Должен_ПолучитьШапкуОтчета");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлСправочника");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлДокумента");
	//СписокТестов.Добавить("Тест_Должен_ПолучитьФайлПеречисление");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлКонстанта");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлРегистрБухгалтерии");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлРегистрНакопления");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлРегистрРасчета");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлБизнесПроцесс");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлПлаСчетов");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлПланВидовРасчета");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлПланВидовХарактеристик");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлОбщийРеквизит");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлОбработка");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлОпределяемыйТип");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлРегистрСведений");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлОтчет");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьФайлРоль");
	СписокТестов.Добавить("Тест_Должен_ПолучитьФайлЗадача");

	Возврат СписокТестов;

КонецФункции

Процедура Тест_Должен_ПолучитьШапкуОтчета() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\ext-report-1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);


    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\ext-report-json-xml-cf.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлСправочника() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\Организации.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);


    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\Организации.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлДокумента() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\doc-document1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);


    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\Документ1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлПеречисление() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\enum-enum1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);


    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\Перечисление1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлКонстанта() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\const-1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\Константа1.xml");

КонецПроцедуры 


Процедура Тест_Должен_ПолучитьФайлРегистрБухгалтерии() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\РегистрБухгалтерии1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\РегистрБухгалтерии1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлРегистрНакопления() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\РегистрНакопления1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\РегистрНакопления1.xml");

КонецПроцедуры 
Процедура Тест_Должен_ПолучитьФайлРегистрРасчета() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\РегистрРасчета1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\РегистрРасчета1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлБизнесПроцесс() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\БизнесПроцесс1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\БизнесПроцесс1.xml");

КонецПроцедуры 


Процедура Тест_Должен_ПолучитьФайлПлаСчетов() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\ПланСчетов1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\ПланСчетов1.xml");

КонецПроцедуры

Процедура Тест_Должен_ПолучитьФайлПланВидовРасчета() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\ПланВидовРасчета1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\ПланВидовРасчета1.xml");

КонецПроцедуры

Процедура Тест_Должен_ПолучитьФайлПланВидовХарактеристик() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\ПланВидовХарактеристик1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\ПланВидовХарактеристик1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлОбщийРеквизит() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\ОбщийРеквизит1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\ОбщийРеквизит1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлОбработка() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\Обработка1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\Обработка1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлОпределяемыйТип() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\ОпределяемыйТип1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\ОпределяемыйТип1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлРегистрСведений() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\РегистрСведений1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\РегистрСведений1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлОтчет() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\Отчет1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\Отчет1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлРоль() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\Роль1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\Роль1.xml");

КонецПроцедуры 

Процедура Тест_Должен_ПолучитьФайлЗадача() Экспорт
    
    Данные = ПолучитьТекстИзФайла("fixtures\json\Задача1.json");
    
    Параметры = Новый ПарсерJSON;
    Объект = Параметры.ПрочитатьJSON(Данные);

    Генератор = Новый ГенераторXMLФайлов();
	Генератор.СоздатьФайлыПоПравилам(Объект, "fixtures\xml\Задача1.xml");

КонецПроцедуры 

//////////////////////////////////////////////////////////////////////////////////////
// Инициализация

Инициализация();
